version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: financebuddy-postgres
    environment:
      POSTGRES_DB: financebuddy
      POSTGRES_USER: financebuddy
      POSTGRES_PASSWORD: financebuddy
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - financebuddy-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: financebuddy-backend
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=financebuddy
      - DB_USERNAME=financebuddy
      - DB_PASSWORD=financebuddy
      - JWT_SECRET=your-jwt-secret-key-change-in-production
      - TWELVEDATA_API_KEY=${TWELVEDATA_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - financebuddy-network
    volumes:
      - ./backend:/app
    command: ["./mvnw", "spring-boot:run"]

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: financebuddy-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
    depends_on:
      - backend
    networks:
      - financebuddy-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: ["npm", "start"]

volumes:
  postgres_data:

networks:
  financebuddy-network:
    driver: bridge
